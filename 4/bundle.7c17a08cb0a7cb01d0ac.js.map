{"version":3,"file":"bundle.7c17a08cb0a7cb01d0ac.js","mappings":"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","sources":["webpack://big-trip/./src/mock/const.js","webpack://big-trip/./src/const.js","webpack://big-trip/./src/utils.js","webpack://big-trip/./src/mock/destinations.js","webpack://big-trip/./src/mock/offers.js","webpack://big-trip/./src/mock/points.js","webpack://big-trip/./src/model/points-model.js","webpack://big-trip/./src/render.js","webpack://big-trip/./src/view/filters-list-view.js","webpack://big-trip/./src/view/sorts-list-view.js","webpack://big-trip/./src/view/point-form-view.js","webpack://big-trip/./src/view/point-view.js","webpack://big-trip/./src/main.js","webpack://big-trip/./src/presenter/big-trip-presenter.js"],"sourcesContent":["export const MockConstants = {\n  Destinations: {\n    Descriptions: [\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n      'Cras aliquet varius magna, non porta ligula feugiat eget.',\n      'Fusce tristique felis at fermentum pharetra.',\n      'Aliquam id orci ut lectus varius viverra.',\n      'Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.',\n      'Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.',\n      'Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.',\n      'Sed sed nisi sed augue convallis suscipit in sed felis.',\n      'Aliquam erat volutpat. Nunc fermentum tortor ac porta dapibus.',\n      'In rutrum ac purus sit amet tempus.'\n    ],\n    Pictures: {\n      SRC: 'https://loremflickr.com/248/152?random=',\n      MIN_AMOUNT: 0,\n      MAX_AMOUNT: 10,\n    },\n    MIN_AMOUNT: 0,\n    MAX_AMOUNT: 30,\n  },\n  Price: {\n    MIN_AMOUNT: 0,\n    MAX_AMOUNT: 10000,\n  },\n  Cities: [\n    'Moscow',\n    'Saint Petersburg',\n    'Paris',\n    'Berlin',\n    'New York',\n    'Kiyv',\n    'Chicago',\n    'London',\n    'Sydney'\n  ],\n  Offers: {\n    Titles: [\n      'Upgrade to a business class',\n      'Choose the radio station',\n      'Choose temperature',\n      'Drive quickly, I\\'m in a hurry',\n      'Drive slowly',\n      'Infotainment system',\n      'Order meal',\n      'Choose seats',\n      'Book a taxi at the arrival point',\n      'Order a breakfast',\n      'Wake up at a certain time',\n      'Choose meal',\n      'Choose seats',\n      'Upgrade to comfort class',\n      'Upgrade to business class',\n      'Add luggage',\n      'Business lounge',\n      'Choose the time of check-in',\n      'Choose the time of check-out',\n      'Add breakfast',\n      'Laundry',\n      'Order a meal from the restaurant',\n      'Choose meal',\n      'Choose seats',\n      'Upgrade to comfort class',\n      'Upgrade to business class',\n      'Add luggage',\n      'Business lounge',\n      'With automatic transmission',\n      'With air conditioning',\n      'Choose live music',\n      'Choose VIP area',\n    ],\n    MIN_PRICE: 0,\n    MAX_PRICE: 1000,\n    MIN_AMOUNT: 0,\n    MAX_AMOUNT: 10,\n  },\n  Points: {\n    MIN_AMOUNT: 1,\n    MAX_AMOUNT: 10,\n  },\n};\n\n","export const SortTypes = ['day', 'event', 'time', 'price', 'offer'];\nexport const FilterTypes = ['everything', 'future', 'present', 'past'];\nexport const PointTypes = ['taxi', 'bus', 'train', 'ship', 'drive', 'flight', 'check-in', 'sightseeing', 'restaurant'];\nexport const Months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\nexport const DatePostfixes = {\n  DAYS: 'D',\n  HOURS: 'H',\n  MINUTES: 'M',\n};\n","import { Months, DatePostfixes } from './const.js';\n\nexport const capitalizeFirstLetter = (value) => value[0].toUpperCase() + value.slice(1);\nexport const getRandomInteger = (rangeStart, rangeEnd) => Math.floor(Math.random() * (rangeEnd - rangeStart + 1)) + rangeStart;\nexport const getRandomArrayElement = (elements) => elements[getRandomInteger(0, elements.length - 1)];\nexport const getRandomDate = (start, end) => start.getTime() + Math.random() * (end.getTime() - start.getTime());\nexport const getElementById = (id, values) => values.find((value) => value.id === id);\n\nconst transformToTwoDigits = (value) => {\n  if (String(value).length < 2) {\n    return `0${value}`;\n  }\n  return value;\n};\n\nconst truncateYearToTwoDigits = (value) => {\n  if (String(value).length === 4) {\n    return String(value).slice(-2);\n  }\n  return value;\n};\n\nexport const humanizeDateForPointFormInput = (date) => {\n  const day = transformToTwoDigits(date.getDate());\n  const month = transformToTwoDigits(date.getMonth() + 1);\n  const year = truncateYearToTwoDigits(date.getFullYear());\n  const hours = transformToTwoDigits(date.getHours());\n  const minutes = transformToTwoDigits(date.getMinutes());\n  return `${day}/${month}/${year} ${hours}:${minutes}`;\n};\n\nexport const humanizeDateForPointDate = (date) => {\n  const month = Months[date.getMonth()];\n  const day = transformToTwoDigits(date.getDate());\n  return `${month} ${day}`;\n};\n\nexport const humanizeDateForPointTime = (date) => {\n  const hours = transformToTwoDigits(date.getHours());\n  const minutes = transformToTwoDigits(date.getMinutes());\n  return `${hours}:${minutes}`;\n};\n\nconst humanizeDateDifferenceComponents = (dateComponent, postfix) => {\n  if (dateComponent) {\n    return String(dateComponent).length < 2 ? `0${dateComponent}${postfix}` : `${dateComponent}${postfix}`;\n  }\n  return `00${postfix}`;\n};\n\nexport const humanizeDateForTimeDifference = (dateFrom, dateTo) => {\n  const timeDifferenceMs = dateTo - dateFrom;\n  const timeDifferenceDays = Math.trunc(timeDifferenceMs / (1000 * 60 * 60 * 24));\n  const timeDifferenceHours = Math.trunc((timeDifferenceMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const timeDifferenceMinutes = Math.trunc((timeDifferenceMs % (1000 * 60 * 60)) / (1000 * 60));\n  if (timeDifferenceDays) {\n    return `${humanizeDateDifferenceComponents(timeDifferenceDays, DatePostfixes.DAYS)} ${humanizeDateDifferenceComponents(timeDifferenceHours, DatePostfixes.HOURS)} ${humanizeDateDifferenceComponents(timeDifferenceMinutes, DatePostfixes.MINUTES)}`;\n  } else if (timeDifferenceHours) {\n    return `${humanizeDateDifferenceComponents(timeDifferenceHours, DatePostfixes.HOURS)} ${humanizeDateDifferenceComponents(timeDifferenceMinutes, DatePostfixes.MINUTES)}`;\n  } else if (timeDifferenceMinutes) {\n    return `${humanizeDateDifferenceComponents(timeDifferenceMinutes, DatePostfixes.MINUTES)}`;\n  }\n};\n\nexport const returnTypeOffers = (point, offersList) => offersList.find((offersItem) => offersItem.type === point.type).offers;\n","import { getRandomInteger, getRandomArrayElement } from '../utils.js';\n\nconst getRandomDestinationPicture = (\n  src,\n  mockPicturesMaxAmount,\n  mockPicturesDescriptions\n) => ({\n  'src': `${src}${getRandomInteger(1, mockPicturesMaxAmount)}`,\n  'description': getRandomArrayElement(mockPicturesDescriptions),\n});\n\nconst getRandomDestinationPictures = (\n  src,\n  mockPicturesMinAmount,\n  mockPicturesMaxAmount,\n  mockPicturesDescriptions\n) => Array.from(\n  {length: getRandomInteger(\n    mockPicturesMinAmount,\n    mockPicturesMaxAmount\n  )},\n  () => getRandomDestinationPicture(\n    src,\n    mockPicturesMaxAmount,\n    mockPicturesDescriptions\n  )\n);\n\nconst getRandomDestination = (\n  src,\n  mockPicturesMinAmount,\n  mockPicturesMaxAmount,\n  mockPicturesDescriptions,\n  mockCity,\n  mockCitiesDescriptions\n) => ({\n  'id': crypto.randomUUID(),\n  'description': getRandomArrayElement(mockCitiesDescriptions),\n  'name': mockCity,\n  'pictures': getRandomDestinationPictures(\n    src,\n    mockPicturesMinAmount,\n    mockPicturesMaxAmount,\n    mockPicturesDescriptions\n  ),\n});\n\nexport const getRandomDestinations = (\n  mockCities,\n  src,\n  mockPicturesMinAmount,\n  mockPicturesMaxAmount,\n  mockPicturesDescriptions,\n  mockCitiesDescriptions\n) => Array.from(\n  mockCities,\n  (mockCity) => getRandomDestination(\n    src,\n    mockPicturesMinAmount,\n    mockPicturesMaxAmount,\n    mockPicturesDescriptions,\n    mockCity,\n    mockCitiesDescriptions\n  )\n);\n","import { getRandomInteger, getRandomArrayElement } from '../utils.js';\n\nconst getRandomOfferForPointType = (\n  mockOfferTitles,\n  mockOfferMinPrice,\n  mockOfferMaxPrice\n) => ({\n  'id': crypto.randomUUID(),\n  'title': getRandomArrayElement(mockOfferTitles),\n  'price': getRandomInteger(\n    mockOfferMinPrice,\n    mockOfferMaxPrice\n  ),\n});\n\nconst getRandomOffersForPointType = (\n  mockOffersMinAmount,\n  mockOffersMaxAmount,\n  mockOffersTitles,\n  mockOfferMinPrice,\n  mockOfferMaxPrice\n) => Array.from(\n  {length: getRandomInteger(\n    mockOffersMinAmount,\n    mockOffersMaxAmount\n  )},\n  () => getRandomOfferForPointType(\n    mockOffersTitles,\n    mockOfferMinPrice,\n    mockOfferMaxPrice\n  )\n);\n\nconst getRandomOffersPerPointType = (\n  pointType,\n  mockOffersMinAmount,\n  mockOffersMaxAmount,\n  mockOffersTitles,\n  mockOfferMinPrice,\n  mockOfferMaxPrice\n) => ({\n  'type': pointType,\n  'offers': getRandomOffersForPointType(\n    mockOffersMinAmount,\n    mockOffersMaxAmount,\n    mockOffersTitles,\n    mockOfferMinPrice,\n    mockOfferMaxPrice)\n});\n\nexport const getRandomOffers = (\n  pointTypes,\n  mockOffersMinAmount,\n  mockOffersMaxAmount,\n  mockOffersTitles,\n  mockOfferMinPrice,\n  mockOfferMaxPrice\n) => Array.from(\n  pointTypes,\n  (pointType) => getRandomOffersPerPointType(\n    pointType,\n    mockOffersMinAmount,\n    mockOffersMaxAmount,\n    mockOffersTitles,\n    mockOfferMinPrice,\n    mockOfferMaxPrice\n  )\n);\n","import { getRandomInteger, getRandomArrayElement } from '../utils.js';\n\nconst getRandomPointOffersIdList = (offersPerPointType) => {\n  const randomOffersIdList = [];\n  for (let currentOffer = 0; currentOffer < offersPerPointType.length; currentOffer++) {\n    if (!Math.round(Math.random())) {\n      randomOffersIdList.push(offersPerPointType[currentOffer].id);\n    }\n  }\n  return randomOffersIdList;\n};\n\nconst getOffersByPointType = (offers, pointType) => offers.find((offer) => offer.type === pointType);\n\nconst getRandomPoint = (pointDestinationId, pointOffersIds, pointType, mockMinPrice, mockMaxPrice) => ({\n  'id': crypto.randomUUID(),\n  'base_price': getRandomInteger(mockMinPrice, mockMaxPrice),\n  'date_from': new Date(getRandomInteger(new Date(2023, 5, 1).getTime(), new Date(2023, 5, 2).getTime())),\n  'date_to': new Date(getRandomInteger(new Date(2023, 5, 2).getTime(), new Date(2023, 5, 3).getTime())),\n  'destination': pointDestinationId,\n  'isFavourite': !Math.round(Math.random()),\n  'offers': pointOffersIds,\n  'type': pointType,\n});\n\nexport const getRandomPoints = (pointsAmount, pointTypes, destinations, offers, mockMinPrice, mockMaxPrice) => {\n  const randomPoints = [];\n  for (let currentPoint = 0; currentPoint < pointsAmount; currentPoint++) {\n    const pointType = getRandomArrayElement(pointTypes);\n    const pointDestination = getRandomArrayElement(destinations);\n    randomPoints[currentPoint] = getRandomPoint(\n      pointDestination.id,\n      getRandomPointOffersIdList(getOffersByPointType(offers, pointType).offers),\n      pointType,\n      mockMinPrice,\n      mockMaxPrice\n    );\n  }\n  return randomPoints;\n};\n","import { MockConstants } from '../mock/const.js';\nimport { PointTypes } from '../const.js';\nimport { getRandomDestinations } from '../mock/destinations.js';\nimport { getRandomOffers } from '../mock/offers.js';\nimport { getRandomPoints } from '../mock/points.js';\nimport { getRandomInteger } from '../utils.js';\n\nconst POINTS_AMOUNT = getRandomInteger(MockConstants.Points.MIN_AMOUNT, MockConstants.Points.MAX_AMOUNT);\n\nexport default class PointsModel {\n  destinations = getRandomDestinations(\n    MockConstants.Cities,\n    MockConstants.Destinations.Pictures.SRC,\n    MockConstants.Destinations.Pictures.MIN_AMOUNT,\n    MockConstants.Destinations.Pictures.MAX_AMOUNT,\n    MockConstants.Destinations.Descriptions,\n    MockConstants.Destinations.Descriptions\n  );\n\n  offers = getRandomOffers(\n    PointTypes,\n    MockConstants.Offers.MIN_AMOUNT,\n    MockConstants.Offers.MAX_AMOUNT,\n    MockConstants.Offers.Titles,\n    MockConstants.Offers.MIN_PRICE,\n    MockConstants.Offers.MAX_PRICE\n  );\n\n  points = getRandomPoints(\n    POINTS_AMOUNT,\n    PointTypes,\n    this.destinations,\n    this.offers,\n    MockConstants.Price.MIN_AMOUNT,\n    MockConstants.Price.MAX_AMOUNT,\n  );\n\n  getDestinations = () => this.destinations;\n  getOffers = () => this.offers;\n  getPoints = () => this.points;\n}\n","const RenderPosition = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nfunction createElement(template) {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n}\n\nfunction render(component, container, place = RenderPosition.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\nexport {RenderPosition, createElement, render};\n","import { createElement } from '../render.js';\nimport { FilterTypes } from '../const.js';\n\nconst createFilterItemTemplate = (filterType) =>\n  `<div class=\"trip-filters__filter\">\n    <input id=\"filter-${filterType}\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"${filterType}\">\n    <label class=\"trip-filters__filter-label\" for=\"filter-${filterType}\">${filterType}</label>\n  </div>`;\n\nconst createFiltersListTemplate = () =>\n  `<form class=\"trip-filters\" action=\"#\" method=\"get\">\n    ${FilterTypes.map((filterType) => createFilterItemTemplate(filterType)).join('')}\n    <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n  </form>`;\n\nexport default class FiltersListView {\n  getTemplate() {\n    return createFiltersListTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render.js';\nimport { SortTypes } from '../const.js';\n\nconst createSortItemTemplate = (sortType) =>\n  `<div class=\"trip-sort__item  trip-sort__item--${sortType}\">\n    <input id=\"sort-${sortType}\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-${sortType}\" disabled=\"\">\n    <label class=\"trip-sort__btn\" for=\"sort-${sortType}\">${sortType}</label>\n  </div>`;\n\nconst createSortsListTemplate = () =>\n  `<form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n    ${SortTypes.map((sortType) => createSortItemTemplate(sortType)).join('')}\n  </form>`;\n\nexport default class SortsListView {\n  getTemplate() {\n    return createSortsListTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render.js';\nimport { capitalizeFirstLetter, getElementById, humanizeDateForPointFormInput, returnTypeOffers } from '../utils.js';\nimport { PointTypes } from '../const.js';\n\nconst DEFAULT_POINT = {\n  'id': '',\n  'base_price': '',\n  'date_from': '',\n  'date_to': '',\n  'destination': '',\n  'isFavourite': '',\n  'offers': '',\n  'type': 'flight'\n};\n\nconst createPointFormHeaderEventTypesItemTemplate = (pointType, point) =>\n  `<div class=\"event__type-item\">\n    <input id=\"event-type-${pointType}-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"${pointType}\" ${point.type === pointType ? 'checked' : ''}>\n    <label class=\"event__type-label  event__type-label--${pointType}\" for=\"event-type-${pointType}-1\">${capitalizeFirstLetter(pointType)}</label>\n  </div>`;\n\nconst createPointFormHeaderEventTypesBlockTemplate = (pointTypes, point) =>\n  `<div class=\"event__type-list\">\n    <fieldset class=\"event__type-group\">\n      <legend class=\"visually-hidden\">Event type</legend>\n      ${pointTypes.map((pointType) => createPointFormHeaderEventTypesItemTemplate(pointType, point)).join('')}\n    </fieldset>\n  </div>`;\n\nconst createPointFormHeaderDestinationsItemTemplate = (destinationItemName) =>\n  `<option value=\"${destinationItemName}\"></option>`;\n\nconst createPointFormHeaderDestinationsBlockTemplate = (point, destinationsList) =>\n  `<div class=\"event__field-group  event__field-group--destination\">\n    <label class=\"event__label  event__type-output\" for=\"event-destination-1\">\n      ${point.type}\n    </label>\n    <input class=\"event__input  event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\" value=\"${point.id ? getElementById(point.destination, destinationsList).name : ''}\" list=\"destination-list-1\">\n    <datalist id=\"destination-list-1\">\n      ${destinationsList.map((destinationItem) => createPointFormHeaderDestinationsItemTemplate(destinationItem.name)).join('')}\n    </datalist>\n  </div>`;\n\nconst createPointFormHeaderAddPointControlsTemplate = () =>\n  `<button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n  <button class=\"event__reset-btn\" type=\"reset\">Cancel</button>`;\n\nconst createPointFormHeaderEditPointControlsTemplate = () =>\n  `<button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n  <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n  <button class=\"event__rollup-btn\" type=\"button\">\n    <span class=\"visually-hidden\">Open event</span>\n  </button>`;\n\nconst createPointFormHeaderPointControls = (point) => point.id ? createPointFormHeaderEditPointControlsTemplate() : createPointFormHeaderAddPointControlsTemplate();\n\nconst createPointFormHeaderTemplate = (pointTypes, point, destinationsList) =>\n  `<header class=\"event__header\">\n    <div class=\"event__type-wrapper\">\n      <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-1\">\n        <span class=\"visually-hidden\">Choose event type</span>\n        <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/${point.type}.png\" alt=\"Event type icon\">\n      </label>\n      <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n      ${createPointFormHeaderEventTypesBlockTemplate(pointTypes, point)}\n    </div>\n    ${createPointFormHeaderDestinationsBlockTemplate(point, destinationsList)}\n\n    <div class=\"event__field-group  event__field-group--time\">\n      <label class=\"visually-hidden\" for=\"event-start-time-1\">From</label>\n      <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\" value=\"${point.id ? humanizeDateForPointFormInput(point.date_from) : ''}\">\n      —\n      <label class=\"visually-hidden\" for=\"event-end-time-1\">To</label>\n      <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"${point.id ? humanizeDateForPointFormInput(point.date_to) : ''}\">\n    </div>\n\n    <div class=\"event__field-group  event__field-group--price\">\n      <label class=\"event__label\" for=\"event-price-1\">\n        <span class=\"visually-hidden\">Price</span>\n        €\n      </label>\n      <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"${point.id ? point.base_price : ''}\">\n    </div>\n\n    ${createPointFormHeaderPointControls(point)}\n  </header>`;\n\nconst createPointFormAvailableOffersItemTemplate = (typeOffer, point) =>\n  `<div class=\"event__offer-selector\">\n    <input class=\"event__offer-checkbox  visually-hidden\" id=\"${typeOffer.id}\" type=\"checkbox\" name=\"${typeOffer.id}\" ${point.offers.includes(typeOffer.id) ? 'checked' : ''}>\n    <label class=\"event__offer-label\" for=\"${typeOffer.id}\">\n      <span class=\"event__offer-title\">${typeOffer.title}</span>\n      +€&nbsp;\n      <span class=\"event__offer-price\">${typeOffer.price}</span>\n    </label>\n  </div>`;\n\nconst createPointFormOffersTemplate = (point, offersList) => {\n  const typeOffers = returnTypeOffers(point, offersList);\n  if (typeOffers.length) {\n    return (`<section class=\"event__section  event__section--offers\">\n      <h3 class=\"event__section-title  event__section-title--offers\">Offers</h3>\n      <div class=\"event__available-offers\">\n        ${typeOffers.map((typeOffer) => createPointFormAvailableOffersItemTemplate(typeOffer, point)).join('')}\n      </div>\n    </section>`);\n  }\n  return '';\n};\n\nconst createPointFormDestinationPhotoTemplate = (pointDestinationPhotoSrc) =>\n  `<img class=\"event__photo\" src=\"${pointDestinationPhotoSrc}\" alt=\"Event photo\">`;\n\nconst createPointFormDestinationTemplate = (point, destinationsList) => {\n  const pointDestination = getElementById(point.destination, destinationsList);\n  return (\n    `<section class=\"event__section  event__section--destination\">\n      <h3 class=\"event__section-title  event__section-title--destination\">Destination</h3>\n      <p class=\"event__destination-description\">${pointDestination.description}</p>\n      <div class=\"event__photos-container\">\n        <div class=\"event__photos-tape\">\n          ${pointDestination.pictures.map((pointDestinationPicture) => createPointFormDestinationPhotoTemplate(pointDestinationPicture.src)).join('')}\n        </div>\n      </div>\n    </section>`\n  );\n};\n\nconst createPointFormTemplate = (pointTypes, point, destinationsList, offersList) =>\n  `<li class=\"trip-events__item\">\n    <form class=\"event event--edit\" action=\"#\" method=\"post\">\n      ${createPointFormHeaderTemplate(pointTypes, point, destinationsList)}\n      <section class=\"event__details\">\n        ${createPointFormOffersTemplate(point, offersList)}\n        ${createPointFormDestinationTemplate(point, destinationsList)}\n      </section>\n    </form>\n  </li>`;\n\nexport default class PointFormView {\n  constructor({\n    point = DEFAULT_POINT,\n    destinationsList,\n    offersList,\n  }) {\n    this.point = point;\n    this.destinationsList = destinationsList;\n    this.offersList = offersList;\n  }\n\n  getTemplate() {\n    return createPointFormTemplate(PointTypes, this.point, this.destinationsList, this.offersList);\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import { createElement } from '../render.js';\nimport { getElementById, humanizeDateForPointDate, humanizeDateForPointTime, humanizeDateForTimeDifference, returnTypeOffers } from '../utils.js';\n\nconst returnPointDateFromTemplate = (point) =>\n  `<time class=\"event__date\" datetime=\"${point.date_from}\">${humanizeDateForPointDate(point.date_from)}</time>`;\n\nconst returnPointTypeTemplate = (point) =>\n  `<div class=\"event__type\">\n    <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"img/icons/${point.type}.png\" alt=\"Event type icon\">\n  </div>`;\n\nconst returnPointTitleTemplate = (point, destinationsList) => {\n  const pointDestination = getElementById(point.destination, destinationsList);\n  return `<h3 class=\"event__title\">${point.type} ${pointDestination.name}</h3>`;\n};\n\nconst returnPointScheduleTemplate = (point) =>\n  `<div class=\"event__schedule\">\n    <p class=\"event__time\">\n      <time class=\"event__start-time\" datetime=\"${point.date_from}\">${humanizeDateForPointTime(point.date_from)}</time>\n    —\n      <time class=\"event__end-time\" datetime=\"${point.date_to}\">${humanizeDateForPointTime(point.date_to)}</time>\n    </p>\n    <p class=\"event__duration\">${humanizeDateForTimeDifference(point.date_from, point.date_to)}</p>\n  </div>`;\n\nconst returnPointOfferTemplate = (pointOffer) =>\n  `<li class=\"event__offer\">\n    <span class=\"event__offer-title\">${pointOffer.title}</span>\n    +€&nbsp;\n    <span class=\"event__offer-price\">${pointOffer.price}</span>\n  </li>`;\n\nconst returnPointOffersTemplate = (point, offersList) => {\n  const typeOffers = returnTypeOffers(point, offersList);\n  return (\n    `<ul class=\"event__selected-offers\">\n      ${point.offers.map((pointOffer) => returnPointOfferTemplate(getElementById(pointOffer, typeOffers))).join('')}\n    </ul>`\n  );\n};\n\nconst createPointTemplate = (point, destinationsList, offersList) =>\n  `<li class=\"trip-events__item\">\n    <div class=\"event\">\n      ${returnPointDateFromTemplate(point)}\n      ${returnPointTypeTemplate(point)}\n      ${returnPointTitleTemplate(point, destinationsList)}\n      ${returnPointScheduleTemplate(point)}\n      <p class=\"event__price\">\n        €&nbsp;<span class=\"event__price-value\">${point.base_price}</span>\n      </p>\n      <h4 class=\"visually-hidden\">Offers:</h4>\n      ${returnPointOffersTemplate(point, offersList)}\n      <button class=\"event__favorite-btn ${point.isFavourite ? 'event__favorite-btn--active' : ''}\" type=\"button\">\n        <span class=\"visually-hidden\">Add to favorite</span>\n        <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n          <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"></path>\n        </svg>\n      </button>\n      <button class=\"event__rollup-btn\" type=\"button\">\n        <span class=\"visually-hidden\">Open event</span>\n      </button>\n    </div>\n  </li>`;\n\nexport default class PointView {\n  constructor({\n    point,\n    destinationsList,\n    offersList\n  }) {\n    this.point = point;\n    this.destinationsList = destinationsList;\n    this.offersList = offersList;\n  }\n\n  getTemplate() {\n    return createPointTemplate(this.point, this.destinationsList, this.offersList);\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n\n","import PointsModel from './model/points-model.js';\nimport BigTripPresenter from './presenter/big-trip-presenter.js';\n\nconst bigTripSiteHeader = document.querySelector('.page-header');\nconst bigTripControlsFilters = bigTripSiteHeader.querySelector('.trip-controls__filters');\nconst bigTripSiteMain = document.querySelector('.page-main');\nconst bigTripPoints = bigTripSiteMain.querySelector('.trip-events');\n\nconst pointsModel = new PointsModel();\n\nconst bigTripPresenter = new BigTripPresenter({\n  bigTripControlsFilters,\n  bigTripPoints,\n  pointsModel,\n});\n\nbigTripPresenter.init();\n","import FiltersListView from '../view/filters-list-view.js';\nimport SortsListView from '../view/sorts-list-view.js';\nimport PointFormView from '../view/point-form-view.js';\nimport { render, RenderPosition } from '../render.js';\nimport PointView from '../view/point-view.js';\n\nexport default class BigTripPresenter {\n  constructor({\n    bigTripControlsFilters,\n    bigTripPoints,\n    pointsModel,\n    pointTypes\n  }) {\n    this.bigTripControlsFilters = bigTripControlsFilters;\n    this.bigTripPoints = bigTripPoints;\n    this.pointsModel = pointsModel;\n    this.pointTypes = pointTypes;\n  }\n\n  init() {\n    this.bigTripPointsList = document.createElement('ul');\n    this.bigTripPointsList.classList.add('trip-events__list');\n    this.bigTripPoints.appendChild(this.bigTripPointsList);\n    this.destinationsList = this.pointsModel.getDestinations();\n    this.offersList = this.pointsModel.getOffers();\n    this.pointsList = this.pointsModel.getPoints();\n    // console.log(this.pointsList);\n    // console.log(this.offersList);\n    // console.log(this.destinationsList);\n    render(new PointFormView({\n      point: this.pointsList[0],\n      destinationsList: this.destinationsList,\n      offersList: this.offersList,\n    }), this.bigTripPointsList, RenderPosition.AFTERBEGIN);\n    render(new FiltersListView(), this.bigTripControlsFilters, RenderPosition.BEFOREEND);\n    render(new SortsListView(), this.bigTripPointsList, RenderPosition.BEFOREBEGIN);\n    for (let currentPoint = 1; currentPoint < this.pointsList.length; currentPoint++) {\n      render(new PointView({\n        point: this.pointsList[currentPoint],\n        destinationsList: this.destinationsList,\n        offersList: this.offersList\n      }), this.bigTripPointsList, RenderPosition.BEFOREEND);\n    }\n  }\n}\n"],"names":["MockConstants","SRC","MIN_AMOUNT","MAX_AMOUNT","SortTypes","FilterTypes","PointTypes","Months","getRandomInteger","rangeStart","rangeEnd","Math","floor","random","getRandomArrayElement","elements","length","getElementById","id","values","find","value","transformToTwoDigits","String","humanizeDateForPointFormInput","date","getDate","getMonth","getFullYear","slice","getHours","getMinutes","humanizeDateForPointTime","humanizeDateDifferenceComponents","dateComponent","postfix","returnTypeOffers","point","offersList","offersItem","type","offers","getRandomDestinationPictures","src","mockPicturesMinAmount","mockPicturesMaxAmount","mockPicturesDescriptions","Array","from","getRandomDestinationPicture","getRandomOffersForPointType","mockOffersMinAmount","mockOffersMaxAmount","mockOffersTitles","mockOfferMinPrice","mockOfferMaxPrice","getRandomOfferForPointType","mockOfferTitles","crypto","randomUUID","getRandomPointOffersIdList","offersPerPointType","randomOffersIdList","currentOffer","round","push","getOffersByPointType","pointType","offer","getRandomPoint","pointDestinationId","pointOffersIds","mockMinPrice","mockMaxPrice","Date","getTime","POINTS_AMOUNT","RenderPosition","createElement","template","newElement","document","innerHTML","firstElementChild","render","component","container","place","insertAdjacentElement","getElement","FiltersListView","getTemplate","map","filterType","createFilterItemTemplate","join","this","element","removeElement","SortsListView","sortType","createSortItemTemplate","DEFAULT_POINT","createPointFormTemplate","pointTypes","destinationsList","createPointFormHeaderTemplate","createPointFormHeaderEventTypesBlockTemplate","createPointFormHeaderEventTypesItemTemplate","toUpperCase","createPointFormHeaderDestinationsBlockTemplate","destination","name","destinationItem","date_from","date_to","base_price","createPointFormHeaderPointControls","createPointFormOffersTemplate","typeOffers","typeOffer","createPointFormAvailableOffersItemTemplate","includes","title","price","createPointFormDestinationTemplate","pointDestination","description","pictures","pointDestinationPicture","PointFormView","constructor","createPointTemplate","returnPointDateFromTemplate","returnPointTypeTemplate","returnPointTitleTemplate","humanizeDateForTimeDifference","dateFrom","dateTo","timeDifferenceMs","timeDifferenceDays","trunc","timeDifferenceHours","timeDifferenceMinutes","returnPointScheduleTemplate","returnPointOffersTemplate","pointOffer","returnPointOfferTemplate","isFavourite","PointView","bigTripControlsFilters","querySelector","bigTripPoints","pointsModel","destinations","getRandomDestinations","mockCities","mockCitiesDescriptions","mockCity","getRandomDestination","getRandomOffers","getRandomOffersPerPointType","points","getRandomPoints","pointsAmount","randomPoints","currentPoint","getDestinations","getOffers","getPoints","bigTripPresenter","init","bigTripPointsList","classList","add","appendChild","pointsList"],"sourceRoot":""}